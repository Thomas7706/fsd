#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar 13 13:41:28 2024

@author: thomas
"""

# 在迴圈內，當某種條件成立，需要強制跳出一層迴圈時，會使用break。
# 在迴圈內，當某個條件成立，希望迴圈內的部分程式該次不要執行，但要繼續迴圈其他的重複次數，會使用continue。

#設計說明：撰寫一程式，讓程式不段列印1~20間的亂數，但亂數遇到的5倍數不列印，遇到11會結束。

import random

while True:
    num = random.randint(1, 20)
    if num == 11:
        break
    if num%5 == 0:
        continue       #跳過下方剩下的步驟並回到上頭起點重複整個迴圈。
    print (num)

print("亂數到11，程式結束。")



#while True: 是一個條件迴圈的語法，它會一直執行其內部的程式區塊，直到迴圈中斷或滿足某個條件為止。
#因此，while True: 表示這個迴圈將永遠持續下去，直到在迴圈內部達成某個條件才會跳出迴圈。

#當程式碼執行到 break 陳述時，迴圈將立即終止，並且程式流程會跳出該迴圈，繼續執行迴圈之後的程式碼。
#當最內層迴圈中的 break 被執行時，它會導致直接跳出該迴圈，同時也會中斷包含它的外層迴圈。
#換句話說，break 會導致所有包含它的迴圈結束執行。

#當程式碼執行到 continue 陳述時，它會跳過當前迴圈內 continue 之後的程式碼，直接進入下一個迴圈的迭代。
#然後，迴圈會繼續執行。

#此程式碼中，當 num 的值為 5 的倍數時，continue 被執行，導致該次迴圈的迭代被跳過，並立即進入下一次迴圈的迭代。

#num = random.randint(1, 20) 在迴圈內的原因是要在每次迴圈迭代時都產生一個新的隨機數。
#如果將其放在迴圈外面，則只會產生一次隨機數，而且在迴圈內無法更新 num 的值。
#因此，將其放在迴圈內確保了每次迭代都會生成一個新的隨機數。